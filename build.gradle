buildscript {
    ext.kotlin_version = '1.5.10'

    ext.dev_name = 'Savvas Dalkitsis'
    ext.dev_email = 'kurosavvas@gmail.com'
    ext.github_name = 'savvasdalkitsis'

    ext.project_name = 'json-merge'
    ext.project_description = 'json-merge is a library for merging json files for the JVM written in Kotlin'
    ext.project_group = 'com.savvasdalkitsis'
    ext.project_artifact = 'json-merge'
    ext.project_version = '0.0.5'
    ext.project_license = 'The Apache Software License, Version 2.0'
    ext.project_license_tag = 'Apache-2.0'
    ext.project_license_url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id 'signing'
    id 'maven'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation (
            "org.json:json:20180130",
    )
    testImplementation (
            'junit:junit:4.13.2',
            "com.shazam:shazamcrest:0.11",
    )
}

group project_group
version project_version
archivesBaseName = project_artifact

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            pom.project {
                name project_name
                packaging 'jar'
                artifactId project_artifact
                description project_description
                url "https://github.com/$github_name/$project_name"
                scm {
                    url "https://github.com/$github_name/$project_name"
                    connection "scm:git:git://github.com/$github_name/${project_name}.git"
                    developerConnection "scm:git:ssh:git@github.com:$github_name/${project_name}.git"
                }
                licenses {
                    license {
                        name project_license
                        url project_license_url
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id github_name
                        name dev_name
                        email dev_email
                    }
                }
            }
        }
    }
}